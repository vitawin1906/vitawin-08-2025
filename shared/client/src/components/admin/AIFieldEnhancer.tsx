import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';
import { Bot, Loader2 } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface AIFieldEnhancerProps {
  fieldType: 'title' | 'description' | 'short_description';
  productTitle: string;
  currentValue: string;
  onApply: (value: string) => void;
  className?: string;
}

const AIFieldEnhancer = ({ 
  fieldType, 
  productTitle, 
  currentValue, 
  onApply, 
  className = "" 
}: AIFieldEnhancerProps) => {
  const [isLoading, setIsLoading] = useState(false);
  const { toast } = useToast();

  const getPromptForField = (type: string, title: string) => {
    switch (type) {
      case 'title':
        return `–£–ª—É—á—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ –∑–¥–æ—Ä–æ–≤—å—è. 
        –¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: "${title}"
        –°–æ–∑–¥–∞–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ 70 —Å–∏–º–≤–æ–ª–æ–≤, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—é—â–µ–µ –ø–æ–ª—å–∑—É –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è.
        –û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ —É–ª—É—á—à–µ–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.`;
        
      case 'description':
        return `–°–æ–∑–¥–∞–π –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "${title}" –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ –∑–¥–æ—Ä–æ–≤—å—è VitaWin.
        –û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 200-400 —Å–ª–æ–≤, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ç–æ–Ω–æ–º, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—Ç—å –ø–æ–ª—å–∑—É –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è.
        –í–∫–ª—é—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–∞–≤–µ, –¥–µ–π—Å—Ç–≤–∏–∏, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é.
        –û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–º –æ–ø–∏—Å–∞–Ω–∏—è –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.`;
        
      case 'short_description':
        return `–°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "${title}" –¥–ª—è –ø—Ä–µ–≤—å—é –≤ –∫–∞—Ç–∞–ª–æ–≥–µ.
        –û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 80-120 —Å–∏–º–≤–æ–ª–æ–≤, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º.
        –ü–æ–¥—á–µ—Ä–∫–Ω–∏ –≥–ª–∞–≤–Ω—É—é –ø–æ–ª—å–∑—É —Ç–æ–≤–∞—Ä–∞.
        –û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ –∫—Ä–∞—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.`;
        
      default:
        return '';
    }
  };

  const enhanceField = async () => {
    if (!productTitle.trim()) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        variant: "destructive",
      });
      return;
    }

    setIsLoading(true);
    try {
      // –ü—Ä–æ—Å—Ç—ã–µ –ò–ò —É–ª—É—á—à–µ–Ω–∏—è –±–µ–∑ –≤–Ω–µ—à–Ω–µ–≥–æ API
      let enhancedText = '';
      
      switch (fieldType) {
        case 'title':
          enhancedText = `${productTitle} - –ü—Ä–µ–º–∏—É–º –¥–æ–±–∞–≤–∫–∞ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è`;
          break;
        case 'short_description':
          enhancedText = `–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è –¥–æ–±–∞–≤–∫–∞ ${productTitle} –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`;
          break;
        case 'description':
          enhancedText = `# ${productTitle} - –ü—Ä–µ–º–∏—É–º –¥–æ–±–∞–≤–∫–∞ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è

## –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
üåø **${productTitle}** - —ç—Ç–æ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è –¥–æ–±–∞–≤–∫–∞, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è –∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏.

## –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞

### –ü–æ–ª—å–∑–∞ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–±—â–µ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ
- –£–ª—É—á—à–∞–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ç–æ–Ω—É—Å
- –°–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤

### –ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞
- –°–æ–¥–µ—Ä–∂–∏—Ç **–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã**
- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–∞—á–µ—Å—Ç–≤–∞
- –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è

## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é

### –°–ø–æ—Å–æ–± –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ. –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø—Ä–∏–µ–º–∞ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º.

### –î–æ–∑–∏—Ä–æ–≤–∫–∞
–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—É—Ç–æ—á–Ω–∞—è –¥–æ–∑–∞ —É–∫–∞–∑–∞–Ω–∞ –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ.

## –ö–∞—á–µ—Å—Ç–≤–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

### –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
–ü—Ä–æ–¥—É–∫—Ç –ø—Ä–æ—à–µ–ª –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–∞—á–µ—Å—Ç–≤–∞.

### –ü—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è
- –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –Ω–µ–ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- –ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø–µ—Ä–∏–æ–¥ –ª–∞–∫—Ç–∞—Ü–∏–∏ (—Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –≤—Ä–∞—á–∞)

*–ù–µ —è–≤–ª—è–µ—Ç—Å—è –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º —Å—Ä–µ–¥—Å—Ç–≤–æ–º*`;
          break;
        default:
          enhancedText = `–£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è ${productTitle}`;
      }
      
      if (enhancedText) {
        onApply(enhancedText);
        toast({
          title: "–ü–æ–ª–µ —É–ª—É—á—à–µ–Ω–æ! ‚ú®",
          description: `–ò–ò –æ–±–Ω–æ–≤–∏–ª ${getFieldLabel(fieldType)}`,
        });
      }
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞ –ò–ò",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å —É–ª—É—á—à–∏—Ç—å –ø–æ–ª–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  const getFieldLabel = (type: string) => {
    switch (type) {
      case 'title': return '–Ω–∞–∑–≤–∞–Ω–∏–µ';
      case 'description': return '–æ–ø–∏—Å–∞–Ω–∏–µ';
      case 'short_description': return '–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ';
      default: return '–ø–æ–ª–µ';
    }
  };

  const getTooltipText = (type: string) => {
    switch (type) {
      case 'title': return '–ò–ò —É–ª—É—á—à–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';
      case 'description': return '–ò–ò —Å–æ–∑–¥–∞—Å—Ç –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ';
      case 'short_description': return '–ò–ò —Å–æ–∑–¥–∞—Å—Ç –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ';
      default: return '–£–ª—É—á—à–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –ò–ò';
    }
  };

  return (
    <TooltipProvider>
      <Tooltip>
        <TooltipTrigger asChild>
          <Button
            type="button"
            variant="ghost"
            size="sm"
            onClick={enhanceField}
            disabled={isLoading || !productTitle.trim()}
            className={`h-8 w-8 p-0 hover:bg-purple-50 ${className}`}
          >
            {isLoading ? (
              <Loader2 className="w-4 h-4 animate-spin text-purple-600" />
            ) : (
              <Bot className="w-4 h-4 text-purple-600" />
            )}
          </Button>
        </TooltipTrigger>
        <TooltipContent side="top" className="text-xs">
          {getTooltipText(fieldType)}
        </TooltipContent>
      </Tooltip>
    </TooltipProvider>
  );
};

export default AIFieldEnhancer;