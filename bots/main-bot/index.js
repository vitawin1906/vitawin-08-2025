import TelegramBot from 'node-telegram-bot-api';
import fetch from 'node-fetch';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', Object.keys(process.env).filter(k => k.includes('TELEGRAM')));
const token = process.env.TELEGRAM_BOT_TOKEN;
console.log('üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞:', token ? `${token.substring(0, 10)}...` : '–ù–ï –ù–ê–ô–î–ï–ù');
const apiUrl = process.env.API_URL || 'http://localhost:5050';
const appUrl = process.env.APP_URL || 'https://vitawins.ru';

if (!token) {
  console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  console.error('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞');
  process.exit(1);
}

const bot = new TelegramBot(token, { 
  polling: {
    interval: 300,
    autoStart: true,
    params: {
      timeout: 10,
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
bot.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error.message);
  if (error.message.includes('401')) {
    console.error('üö´ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
    console.error('üí° –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –±–æ—Ç —á–µ—Ä–µ–∑ @BotFather');
  }
});

bot.on('polling_error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ polling:', error.message);
});

console.log('ü§ñ VitaWin –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start(.*)/, async (msg, match) => {
  const chatId = msg.chat.id;
  const user = msg.from;
  const param = match[1] ? match[1].trim() : '';
  
  console.log(`üì± –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.first_name} (${user.id}), –ø–∞—Ä–∞–º–µ—Ç—Ä: "${param}"`);
  
  if (param === 'auth') {
    // –†–µ–∂–∏–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º JWT —Ç–æ–∫–µ–Ω
    try {
      const response = await fetch(`${apiUrl}/api/auth/telegram-bot-login`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          telegram_id: user.id,
          first_name: user.first_name,
          username: user.username
        })
      });
      
      const data = await response.json();
      
      if (data.success) {
        bot.sendMessage(chatId, `üîê *–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è VitaWin*\n\nüëã –ü—Ä–∏–≤–µ—Ç, ${user.first_name}!\nüí∞ –ë–∞–ª–∞–Ω—Å: ${data.user.balance}‚ÇΩ\nüîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: ${data.user.referral_code}\n\n‚úÖ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—Ö–æ–¥–∞:`, {
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [[
              { text: 'üöÄ –í–æ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url: `${appUrl}/auth?token=${data.authToken}` }
            ]]
          }
        });
      } else {
        bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ API:', error);
      bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.');
    }
  } else {
    // –û–±—ã—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    bot.sendMessage(chatId, `üéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VitaWin!*\n\nüëã –ü—Ä–∏–≤–µ—Ç, ${user.first_name}!\n\nüåü –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: \`${user.id}\`\nüíé –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–º —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!\n\nüõçÔ∏è –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –¥–ª—è –ø–æ–∫—É–ø–æ–∫:`, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω', url: appUrl }],
          [{ text: 'üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', url: `${appUrl}/account` }],
          [{ text: 'üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url: 'https://t.me/vitawin_support_bot' }]
        ]
      }
    });
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', async (query) => {
  const { id, data, from, message } = query;
  
  try {
    if (data === 'company_info') {
      bot.answerCallbackQuery(id, { text: '–ó–∞–≥—Ä—É–∂–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏...' });
      bot.sendMessage(from.id, `üè¢ *–û –∫–æ–º–ø–∞–Ω–∏–∏ VitaWin*\n\nüå± –ú—ã - –≤–µ–¥—É—â–∏–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –∫—Ä–∞—Å–æ—Ç—ã.\n\nüí™ –ù–∞—à–∞ –º–∏—Å—Å–∏—è: –ø–æ–º–æ—á—å –ª—é–¥—è–º –∂–∏—Ç—å –∑–¥–æ—Ä–æ–≤–æ–π –∏ –∞–∫—Ç–∏–≤–Ω–æ–π –∂–∏–∑–Ω—å—é.\n\nüîó –°–∞–π—Ç: ${appUrl}\nüìß Email: info@vitawins.ru`, {
        parse_mode: 'Markdown'
      });
    } else if (data === 'support') {
      bot.answerCallbackQuery(id, { text: '–ü–µ—Ä–µ–∫–ª—é—á–∞—é –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É...' });
      bot.sendMessage(from.id, 'üÜò *–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏*\n\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—à –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏:', {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [[
            { text: 'üÜò –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', url: 'https://t.me/vitawin_support_bot' }
          ]]
        }
      });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ callback:', error);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error.message);
});

bot.on('polling_error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ polling:', error.message);
});

console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç VitaWin –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');