#!/bin/bash

echo "üöÄ === –ü–†–û–ò–ó–í–û–î–°–¢–í–ï–ù–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï DOCKER === üöÄ"
echo ""

echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ production .env —Ñ–∞–π–ª–∞..."
cat > .env.production.test << EOF
NODE_ENV=production
PORT=5000
DATABASE_URL=postgresql://test_user:test_pass@localhost:5432/vitawin_test
TELEGRAM_BOT_TOKEN=test_token
TELEGRAM_SUPPORT_BOT_TOKEN=test_support_token
EOF

echo "‚úÖ .env.production.test —Å–æ–∑–¥–∞–Ω"
echo ""

echo "üì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose.yml
if [ -f "docker-compose.yml" ]; then
    echo "‚úÖ docker-compose.yml –Ω–∞–π–¥–µ–Ω"
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ docker-compose:"
    grep -E "^  [a-z]" docker-compose.yml | sed 's/:$//' | while read service; do
        echo "   - $service"
    done
    
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
    grep -A 3 "ports:" docker-compose.yml | grep -E "^\s*-" | while read port; do
        echo "   $port"
    done
    
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ volumes:"
    grep -A 10 "volumes:" docker-compose.yml | grep -E "^\s*-" | head -5 | while read volume; do
        echo "   $volume"
    done
    
else
    echo "‚ö†Ô∏è docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üêò –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PostgreSQL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ë–î
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Drizzle –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
if [ -f "drizzle.config.ts" ]; then
    grep -E "(dialect|schema|out)" drizzle.config.ts | while read line; do
        echo "   $line"
    done
fi

echo ""
echo "üîß –°–∏–º—É–ª—è—Ü–∏—è production —Å–±–æ—Ä–∫–∏..."

# –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∏–∑ Dockerfile
echo "–≠—Ç–∞–ø 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
echo "   npm ci (–ø—Ä–æ–ø—É—â–µ–Ω–æ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏)"

echo "–≠—Ç–∞–ø 2: –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
echo "   npm run build:"
echo "   - Frontend: vite build ‚Üí dist/public/"
echo "   - Backend: esbuild ‚Üí dist/index.js"

echo "–≠—Ç–∞–ø 3: Production –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
echo "   npm ci --only=production"

echo "–≠—Ç–∞–ø 4: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
echo "   adduser vitawin"
echo "   mkdir uploads logs"

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ
echo "–ü–æ–∏—Å–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ:"
secrets_found=0

if grep -r "password.*=" client/ server/ 2>/dev/null | grep -v ".env" | head -3; then
    secrets_found=1
fi

if grep -r "token.*=" client/ server/ 2>/dev/null | grep -v ".env" | head -3; then
    secrets_found=1
fi

if [ $secrets_found -eq 0 ]; then
    echo "‚úÖ –Ø–≤–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
else
    echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
fi

echo ""
echo "üìä –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
echo "–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥:"
if [ -d "client" ]; then
    echo "   Frontend: $(du -sh client/ 2>/dev/null | cut -f1)"
fi
if [ -d "server" ]; then
    echo "   Backend: $(du -sh server/ 2>/dev/null | cut -f1)"
fi
if [ -d "shared" ]; then
    echo "   Shared: $(du -sh shared/ 2>/dev/null | cut -f1)"
fi

echo "   node_modules: $(du -sh node_modules/ 2>/dev/null | cut -f1 || echo '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"

echo ""
echo "üéØ === –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø PRODUCTION === üéØ"
echo ""
echo "1. üîí –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
echo "   DATABASE_URL - —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL"
echo "   TELEGRAM_BOT_TOKEN - —Ç–æ–∫–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞"
echo "   TELEGRAM_SUPPORT_BOT_TOKEN - —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
echo ""
echo "2. üê≥ –ö–æ–º–∞–Ω–¥—ã Docker:"
echo "   docker build -t vitawin:latest ."
echo "   docker run -p 5000:5000 --env-file .env.production vitawin:latest"
echo ""
echo "3. üöÄ Docker Compose:"
echo "   docker-compose up -d"
echo "   docker-compose logs -f app"
echo ""
echo "4. üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è:"
echo "   curl http://localhost:5000/health"
echo "   docker ps"
echo ""

# –û—á–∏—Å—Ç–∫–∞
rm -f .env.production.test

echo "‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"