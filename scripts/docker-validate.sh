#!/bin/bash

echo "üê≥ === –í–ê–õ–ò–î–ê–¶–ò–Ø DOCKER –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò === üê≥"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Dockerfile
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile..."
if [ -f "Dockerfile" ]; then
    echo "‚úÖ Dockerfile –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑
    base_image=$(grep "^FROM" Dockerfile | head -1)
    echo "üì¶ –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑: $base_image"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º COPY –∫–æ–º–∞–Ω–¥—ã
    echo "üìÅ COPY –∫–æ–º–∞–Ω–¥—ã:"
    grep "^COPY" Dockerfile | while read line; do
        echo "   $line"
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º RUN –∫–æ–º–∞–Ω–¥—ã
    echo "üîß RUN –∫–æ–º–∞–Ω–¥—ã:"
    grep "^RUN" Dockerfile | while read line; do
        echo "   $line"
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º CMD
    cmd=$(grep "^CMD" Dockerfile)
    echo "üöÄ –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞: $cmd"
    
else
    echo "‚ùå Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .dockerignore
echo "üö´ –ü—Ä–æ–≤–µ—Ä–∫–∞ .dockerignore..."
if [ -f ".dockerignore" ]; then
    echo "‚úÖ .dockerignore –Ω–∞–π–¥–µ–Ω"
    echo "–ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
    cat .dockerignore | head -10
else
    echo "‚ö†Ô∏è .dockerignore –Ω–µ –Ω–∞–π–¥–µ–Ω - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
echo "üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
required_files=(
    "package.json"
    "vite.config.ts"
    "tailwind.config.ts"
    "postcss.config.js"
    "drizzle.config.ts"
    "components.json"
    "index.html"
)

for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi
done

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
required_dirs=(
    "client"
    "server"
    "shared"
)

for dir in "${required_dirs[@]}"; do
    if [ -d "$dir" ]; then
        echo "‚úÖ $dir/ ($(find $dir -name "*.ts" -o -name "*.tsx" | wc -l) —Ñ–∞–π–ª–æ–≤)"
    else
        echo "‚ùå $dir/ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi
done

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json —Å–∫—Ä–∏–ø—Ç—ã
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ npm —Å–∫—Ä–∏–ø—Ç–æ–≤..."
if [ -f "package.json" ]; then
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã:"
    node -e "
        const pkg = require('./package.json');
        Object.keys(pkg.scripts || {}).forEach(script => {
            console.log('   ' + script + ': ' + pkg.scripts[script]);
        });
    "
fi

echo ""

# –°–∏–º—É–ª—è—Ü–∏—è Docker build —ç—Ç–∞–ø–æ–≤
echo "üîÑ –°–∏–º—É–ª—è—Ü–∏—è —ç—Ç–∞–ø–æ–≤ Docker build..."

echo "–≠—Ç–∞–ø 1: COPY —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
missing_config=0
for file in package.json vite.config.ts tailwind.config.ts; do
    if [ ! -f "$file" ]; then
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç $file"
        missing_config=1
    fi
done
if [ $missing_config -eq 0 ]; then
    echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ"
fi

echo "–≠—Ç–∞–ø 2: npm ci (—Å–∏–º—É–ª—è—Ü–∏—è)..."
if [ -f "package-lock.json" ]; then
    echo "‚úÖ package-lock.json –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ö†Ô∏è package-lock.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

echo "–≠—Ç–∞–ø 3: COPY –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞..."
source_dirs=0
for dir in client server shared; do
    if [ -d "$dir" ]; then
        source_dirs=$((source_dirs + 1))
    fi
done
echo "‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥: $source_dirs/3 –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"

echo "–≠—Ç–∞–ø 4: npm run build (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã)..."
build_cmd=$(node -e "console.log(require('./package.json').scripts.build || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')")
echo "   –ö–æ–º–∞–Ω–¥–∞ —Å–±–æ—Ä–∫–∏: $build_cmd"

echo ""
echo "üéØ === –†–ï–ó–£–õ–¨–¢–ê–¢ –í–ê–õ–ò–î–ê–¶–ò–ò === üéØ"

# –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
issues=0

if [ ! -f "Dockerfile" ]; then issues=$((issues + 1)); fi
if [ ! -f "package.json" ]; then issues=$((issues + 1)); fi
if [ ! -f "vite.config.ts" ]; then issues=$((issues + 1)); fi
if [ ! -d "client" ]; then issues=$((issues + 1)); fi
if [ ! -d "server" ]; then issues=$((issues + 1)); fi

if [ $issues -eq 0 ]; then
    echo "‚úÖ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ì–û–¢–û–í–ê –∫ —Å–±–æ—Ä–∫–µ"
    echo "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: docker build -t vitawin ."
else
    echo "‚ùå –ù–∞–π–¥–µ–Ω–æ $issues –ø—Ä–æ–±–ª–µ–º –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
fi

echo ""
echo "üìù –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Docker:"
echo "   docker build -t vitawin ."
echo "   docker run -p 5000:5000 -e DATABASE_URL=your_db_url vitawin"