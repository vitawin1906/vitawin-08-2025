#!/bin/bash

# VitaWin Admin CLI - Bash wrapper —Å–∫—Ä–∏–ø—Ç
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./admin-cli.sh –∏–ª–∏ docker exec -it vitawin_app node /app/scripts/admin-cli.js

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! docker ps &> /dev/null; then
        error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ VitaWin
check_containers() {
    local postgres_status=$(docker ps --filter "name=vitawin_postgres" --format "{{.Status}}" | head -1)
    local app_status=$(docker ps --filter "name=vitawin_app" --format "{{.Status}}" | head -1)
    
    if [[ -z "$postgres_status" ]]; then
        error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä vitawin_postgres –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose up -d postgres"
        exit 1
    fi
    
    if [[ -z "$app_status" ]]; then
        warn "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä vitawin_app –Ω–µ –Ω–∞–π–¥–µ–Ω, –∑–∞–ø—É—Å–∫ CLI –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ PostgreSQL"
        USE_POSTGRES_DIRECT=true
    else
        log "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≥–æ—Ç–æ–≤—ã: PostgreSQL (${postgres_status:0:10}...), App (${app_status:0:10}...)"
    fi
}

# –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
run_via_app() {
    log "–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä vitawin_app..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    if docker exec vitawin_app test -w /app; then
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –∫–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if ! docker exec vitawin_app test -f /app/scripts/admin-cli.js; then
            log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ scripts –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞..."
            docker exec vitawin_app mkdir -p /app/scripts 2>/dev/null || true
            docker cp "$SCRIPT_DIR/admin-cli.js" vitawin_app:/app/scripts/ 2>/dev/null || true
        fi
        
        docker exec -it vitawin_app node /app/scripts/admin-cli.js
    else
        log "–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –Ω–∞ —Ö–æ—Å—Ç–µ..."
        run_on_host_simple
    fi
}

# –ó–∞–ø—É—Å–∫ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–∞ —Ö–æ—Å—Ç–µ
run_on_host_simple() {
    if [ -f "$SCRIPT_DIR/admin-cli-simple.js" ]; then
        node "$SCRIPT_DIR/admin-cli-simple.js"
    else
        log "‚ùå –§–∞–π–ª admin-cli-simple.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (fallback)
run_via_postgres() {
    log "–ó–∞–ø—É—Å–∫ Admin CLI —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js –≤ PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    if ! docker exec vitawin_postgres which node &> /dev/null; then
        error "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ PostgreSQL"
        echo "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä vitawin_app"
        exit 1
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä PostgreSQL
    docker cp "$SCRIPT_DIR/admin-cli.js" vitawin_postgres:/tmp/admin-cli.js
    docker exec -it vitawin_postgres node /tmp/admin-cli.js
}

# SQL —É—Ç–∏–ª–∏—Ç—ã
run_sql() {
    local query="$1"
    log "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL: ${query:0:50}..."
    docker exec -i vitawin_postgres psql -U vitawin_user -d vitawin -c "$query"
}

# –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã
quick_commands() {
    case "$1" in
        "check")
            log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö..."
            run_sql "SELECT COUNT(*) as admin_count FROM admin_users;"
            run_sql "SELECT id, email, created_at, last_login FROM admin_users ORDER BY id;"
            ;;
        "reset")
            warn "–°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
            echo "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:"
            read -r confirmation
            if [[ "$confirmation" == "YES" ]]; then
                run_sql "DROP SCHEMA public CASCADE; CREATE SCHEMA public; GRANT ALL ON SCHEMA public TO vitawin_user; GRANT ALL ON SCHEMA public TO public;"
                log "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞"
            else
                warn "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
            fi
            ;;
        "status")
            log "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ VitaWin:"
            docker ps --filter "name=vitawin" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
            ;;
        "logs")
            log "–õ–æ–≥–∏ PostgreSQL:"
            docker logs vitawin_postgres --tail 20
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [check|reset|status|logs]"
            echo "–ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ CLI"
            ;;
    esac
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}"
    echo "üîß VitaWin Admin CLI"
    echo "===================="
    echo -e "${NC}"
    
    check_docker
    check_containers
    
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –≤—ã–ø–æ–ª–Ω—è–µ–º –±—ã—Å—Ç—Ä—É—é –∫–æ–º–∞–Ω–¥—É
    if [[ $# -gt 0 ]]; then
        quick_commands "$1"
        exit 0
    fi
    
    # –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ CLI
    if [[ "$USE_POSTGRES_DIRECT" == "true" ]]; then
        run_via_postgres
    else
        run_via_app
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'echo -e "\n${YELLOW}–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º${NC}"; exit 130' INT
trap 'echo -e "\n${RED}–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è${NC}"; exit 143' TERM

# –ó–∞–ø—É—Å–∫
main "$@"