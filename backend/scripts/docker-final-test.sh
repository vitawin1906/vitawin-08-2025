#!/bin/bash

echo "üéØ === –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï DOCKER –°–ò–°–¢–ï–ú–´ === üéØ"
echo ""

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."

# –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã Docker
echo "üì¶ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:"
files=("Dockerfile" ".dockerignore" "index.html" "docker-compose.yml")
for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi
done

echo ""
echo "ü§ñ Telegram –±–æ—Ç—ã:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–æ–≤
bots=("main-bot" "support-bot")
for bot in "${bots[@]}"; do
    echo "   üìÅ $bot:"
    if [ -f "bots/$bot/package.json" ]; then
        echo "      ‚úÖ package.json"
    else
        echo "      ‚ùå package.json"
    fi
    
    if [ -f "bots/$bot/Dockerfile" ]; then
        echo "      ‚úÖ Dockerfile"
    else
        echo "      ‚ùå Dockerfile"
    fi
    
    if [ -f "bots/$bot/index.js" ]; then
        echo "      ‚úÖ index.js"
    else
        echo "      ‚ùå index.js"
    fi
done

echo ""
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.yml..."

# –ü–æ–¥—Å—á–µ—Ç —Å–µ—Ä–≤–∏—Å–æ–≤
services_count=$(grep -c "^  [a-z].*:$" docker-compose.yml)
echo "   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤: $services_count"

echo "   –°–µ—Ä–≤–∏—Å—ã:"
grep "^  [a-z].*:$" docker-compose.yml | sed 's/:$//' | while read service; do
    echo "      - $service"
done

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ docker-compose..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if grep -q "depends_on:" docker-compose.yml; then
    echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É —Å–µ—Ä–≤–∏—Å–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
else
    echo "‚ö†Ô∏è –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

if grep -q "healthcheck:" docker-compose.yml; then
    echo "‚úÖ Health checks –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
else
    echo "‚ö†Ô∏è Health checks –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

if grep -q "networks:" docker-compose.yml; then
    echo "‚úÖ –°–µ—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
else
    echo "‚ö†Ô∏è –°–µ—Ç—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
fi

echo ""
echo "üìä –†–∞–∑–º–µ—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:"
du -sh bots/ 2>/dev/null || echo "   bots/: –Ω–µ –Ω–∞–π–¥–µ–Ω"
du -sh client/ 2>/dev/null || echo "   client/: –Ω–µ –Ω–∞–π–¥–µ–Ω"
du -sh server/ 2>/dev/null || echo "   server/: –Ω–µ –Ω–∞–π–¥–µ–Ω"
du -sh shared/ 2>/dev/null || echo "   shared/: –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo ""
echo "üéØ === –†–ï–ó–£–õ–¨–¢–ê–¢ –§–ò–ù–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø === üéØ"
echo ""
echo "‚úÖ Docker —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!"
echo ""
echo "üöÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
echo ""
echo "1. üèóÔ∏è  –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫:"
echo "   docker-compose up -d"
echo ""
echo "2. üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "   docker-compose ps"
echo "   docker-compose logs -f"
echo ""
echo "3. üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   docker-compose stop       # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "   docker-compose restart    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "   docker-compose down       # –ü–æ–ª–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ"
echo ""
echo "4. üîç –û—Ç–ª–∞–¥–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞:"
echo "   docker-compose logs app            # –õ–æ–≥–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "   docker-compose logs main-bot       # –õ–æ–≥–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞"
echo "   docker-compose logs support-bot    # –õ–æ–≥–∏ –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
echo ""
echo "‚ú® –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!"