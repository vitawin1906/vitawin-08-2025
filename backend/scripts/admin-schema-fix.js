#!/usr/bin/env node

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã admin_users –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);

async function fixAdminSchema() {
  console.log('\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–•–ï–ú–´ ADMIN_USERS\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ö–µ–º—É
    console.log('üìä 1. –¢–µ–∫—É—â–∞—è —Å—Ö–µ–º–∞ admin_users:');
    const { stdout: schemaInfo } = await execAsync(
      `docker exec -i vitawin_postgres psql -U vitawin_user -d vitawin -c "\\d admin_users"`
    );
    console.log(schemaInfo);

    // 2. –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    console.log('\nüîÑ 2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫...');
    
    try {
      await execAsync(
        `docker exec -i vitawin_postgres psql -U vitawin_user -d vitawin -c "
          ALTER TABLE admin_users ADD COLUMN IF NOT EXISTS is_active boolean DEFAULT true;
          ALTER TABLE admin_users ADD COLUMN IF NOT EXISTS updated_at timestamp DEFAULT CURRENT_TIMESTAMP;
        "`
      );
      console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.log('‚ö†Ô∏è –ö–æ–ª–æ–Ω–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞:', error.message);
    }

    // 3. –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ password_hash –∏–º–µ–µ—Ç —Ç–∏–ø TEXT
    console.log('\nüîß 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ password_hash...');
    await execAsync(
      `docker exec -i vitawin_postgres psql -U vitawin_user -d vitawin -c "
        ALTER TABLE admin_users ALTER COLUMN password_hash TYPE TEXT;
      "`
    );

    // 4. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã—Ö –∞–¥–º–∏–Ω–æ–≤
    console.log('\nüóëÔ∏è 4. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∞–¥–º–∏–Ω–æ–≤...');
    await execAsync(
      `docker exec -i vitawin_postgres psql -U vitawin_user -d vitawin -c "
        DELETE FROM admin_activity_log WHERE admin_id IN (SELECT id FROM admin_users);
        DELETE FROM admin_sessions WHERE admin_id IN (SELECT id FROM admin_users);
        DELETE FROM admin_users;
      "`
    );

    // 5. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–æ–≤ —á–µ—Ä–µ–∑ Node.js —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ö–µ—à–∞–º–∏
    console.log('\nüë• 5. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–æ–≤...');
    const { stdout: adminCreation } = await execAsync(
      `docker exec vitawin_app node -e "
        const bcrypt = require('bcrypt');
        const { Pool } = require('pg');
        
        async function createAdmins() {
          const pool = new Pool({
            connectionString: process.env.DATABASE_URL
          });
          
          try {
            // –°–æ–∑–¥–∞–µ–º —Ö–µ—à–∏
            const adminHash = await bcrypt.hash('VitawinAdmin2025', 10);
            const doroshHash = await bcrypt.hash('admin123', 10);
            
            console.log('Generated admin hash length:', adminHash.length);
            console.log('Generated dorosh hash length:', doroshHash.length);
            
            // –í—Å—Ç–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
            const admin1 = await pool.query(
              'INSERT INTO admin_users (email, password_hash, is_active, created_at, updated_at) VALUES (\\$1, \\$2, \\$3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING id, email, LENGTH(password_hash) as hash_length',
              ['admin@vitawins.ru', adminHash, true]
            );
            
            const admin2 = await pool.query(
              'INSERT INTO admin_users (email, password_hash, is_active, created_at, updated_at) VALUES (\\$1, \\$2, \\$3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING id, email, LENGTH(password_hash) as hash_length',
              ['dorosh21@gmail.com', doroshHash, true]
            );
            
            console.log('Admin 1 created:', admin1.rows[0]);
            console.log('Admin 2 created:', admin2.rows[0]);
            
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
            console.log('\\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤...');
            
            const test1Result = await pool.query('SELECT email, password_hash FROM admin_users WHERE email = \\$1', ['admin@vitawins.ru']);
            if (test1Result.rows.length > 0) {
              const admin = test1Result.rows[0];
              const isValid = await bcrypt.compare('VitawinAdmin2025', admin.password_hash);
              console.log('admin@vitawins.ru test:', isValid ? 'SUCCESS ‚úÖ' : 'FAILED ‚ùå');
              console.log('Hash length in DB:', admin.password_hash.length);
            }
            
            const test2Result = await pool.query('SELECT email, password_hash FROM admin_users WHERE email = \\$1', ['dorosh21@gmail.com']);
            if (test2Result.rows.length > 0) {
              const admin = test2Result.rows[0];
              const isValid = await bcrypt.compare('admin123', admin.password_hash);
              console.log('dorosh21@gmail.com test:', isValid ? 'SUCCESS ‚úÖ' : 'FAILED ‚ùå');
              console.log('Hash length in DB:', admin.password_hash.length);
            }
            
          } catch (error) {
            console.error('Admin creation error:', error.message);
          } finally {
            await pool.end();
          }
        }
        
        createAdmins();
      "`
    );

    console.log(adminCreation);

    // 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüìä 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–æ–≤:');
    const { stdout: finalCheck } = await execAsync(
      `docker exec -i vitawin_postgres psql -U vitawin_user -d vitawin -c "SELECT id, email, is_active, LENGTH(password_hash) as hash_length, LEFT(password_hash, 10) || '...' as hash_preview FROM admin_users ORDER BY id;"`
    );
    console.log(finalCheck);

    console.log('\nüéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–•–ï–ú–´ –ó–ê–í–ï–†–®–ï–ù–û!');
    console.log('\nüìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É:');
    console.log('‚Ä¢ Email: admin@vitawins.ru');
    console.log('‚Ä¢ –ü–∞—Ä–æ–ª—å: VitawinAdmin2025 (–±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤)');
    console.log('');
    console.log('‚Ä¢ Email: dorosh21@gmail.com');
    console.log('‚Ä¢ –ü–∞—Ä–æ–ª—å: admin123');
    console.log('\nüåê URL: https://vitawins.ru/admin');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã:', error.message);
  }
}

fixAdminSchema();