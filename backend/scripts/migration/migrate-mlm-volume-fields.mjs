#!/usr/bin/env node

import { drizzle } from "drizzle-orm/neon-http";
import { neon } from "@neondatabase/serverless";
import { sql } from "drizzle-orm";

const connectionString = process.env.DATABASE_URL;

if (!connectionString) {
  console.error('‚ùå DATABASE_URL environment variable is required');
  process.exit(1);
}

const client = neon(connectionString);
const db = drizzle(client);

async function migrateMLMVolumeFields() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –ø–æ–ª–µ–π –æ–±—ä–µ–º–∞ –¥–ª—è MLM —É—Ä–æ–≤–Ω–µ–π...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ –ø–æ–ª—è
    const checkResult = await db.execute(sql`
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'mlm_levels' 
      AND column_name IN ('required_personal_volume', 'required_group_volume')
    `);
    
    if (checkResult.length >= 2) {
      console.log('‚úÖ –ü–æ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
      return;
    }
    
    console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è required_personal_volume –∏ required_group_volume...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∏ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –æ–±—ä–µ–º–∞
    await db.execute(sql`
      ALTER TABLE mlm_levels 
      ADD COLUMN IF NOT EXISTS required_personal_volume INTEGER DEFAULT 0,
      ADD COLUMN IF NOT EXISTS required_group_volume INTEGER DEFAULT 0
    `);
    
    console.log('‚úÖ –ü–æ–ª—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    
    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –æ–±—ä–µ–º–æ–≤
    console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –æ–±—ä–µ–º–æ–≤ –¥–ª—è —É—Ä–æ–≤–Ω–µ–π...');
    
    // –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ
    const volumeUpdates = [
      { level: 1, personal: 0, group: 0 },
      { level: 2, personal: 100, group: 0 },
      { level: 3, personal: 200, group: 500 },
      { level: 4, personal: 300, group: 1000 },
      { level: 5, personal: 500, group: 2500 },
      { level: 6, personal: 800, group: 5000 },
      { level: 7, personal: 1200, group: 10000 },
      { level: 8, personal: 1800, group: 20000 },
      { level: 9, personal: 2500, group: 40000 },
      { level: 10, personal: 3500, group: 80000 },
      { level: 11, personal: 5000, group: 150000 },
      { level: 12, personal: 7000, group: 300000 },
      { level: 13, personal: 10000, group: 600000 },
      { level: 14, personal: 15000, group: 1200000 },
      { level: 15, personal: 22000, group: 2500000 },
      { level: 16, personal: 30000, group: 5000000 }
    ];
    
    for (const update of volumeUpdates) {
      await db.execute(sql`
        UPDATE mlm_levels 
        SET required_personal_volume = ${update.personal},
            required_group_volume = ${update.group}
        WHERE level = ${update.level}
      `);
    }
    
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –í—Å–µ MLM —É—Ä–æ–≤–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –ø–æ –æ–±—ä–µ–º—É');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
migrateMLMVolumeFields()
  .then(() => {
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    process.exit(0);
  })
  .catch((error) => {
    console.error('üí• –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å:', error);
    process.exit(1);
  });