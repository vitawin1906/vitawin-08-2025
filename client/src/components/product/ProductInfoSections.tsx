import { Clock, CheckCircle, Heart, Info } from 'lucide-react';

interface ProductInfoSectionsProps {
  keyBenefits?: string | null;
  qualityGuarantee?: string | null;
  compositionTable?: { component: string; amount: string }[] | null;
  nutritionFacts?: string | null;
  howToTake?: string;
}

const ProductInfoSections = ({ 
  keyBenefits, 
  qualityGuarantee, 
  compositionTable,
  nutritionFacts,
  howToTake 
}: ProductInfoSectionsProps) => {
  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  if (!keyBenefits && !qualityGuarantee && (!compositionTable || compositionTable.length === 0) && !nutritionFacts && !howToTake) {
    return null;
  }

  return (
    <div className="bg-white py-4 sm:py-8">
      <div className="w-full px-4 space-y-6 sm:space-y-8">
        
        {/* –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –°–æ—Å—Ç–∞–≤ - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-8">
          {/* –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ */}
          {qualityGuarantee && qualityGuarantee.trim() && (
            <div>
              <div className="flex items-center gap-2 mb-3 sm:mb-4">
                <CheckCircle className="h-4 w-4 sm:h-5 sm:w-5 text-green-600 flex-shrink-0" />
                <h3 className="text-base sm:text-lg font-semibold text-gray-900">–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞</h3>
              </div>
              <div className="space-y-2">
                {qualityGuarantee.split('\n').filter(item => item.trim()).map((item, index) => (
                  <div key={index} className="flex items-start gap-2">
                    <CheckCircle className="h-3 w-3 sm:h-4 sm:w-4 text-green-600 mt-1 flex-shrink-0" />
                    <span className="text-sm sm:text-base text-gray-700 leading-relaxed">{item.trim()}</span>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* –°–æ—Å—Ç–∞–≤ –∏ –ø–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å */}
          {((compositionTable && compositionTable.length > 0) || (nutritionFacts && nutritionFacts.trim())) && (
            <div>
              <h3 className="text-base sm:text-lg font-semibold text-gray-900 mb-3 sm:mb-4">–°–æ—Å—Ç–∞–≤ –∏ –ø–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å</h3>
              
              {compositionTable && compositionTable.length > 0 && (
                <div className="bg-gray-50 rounded-lg p-3 sm:p-4 mb-3 sm:mb-4 overflow-x-auto">
                  <table className="w-full border-collapse min-w-full">
                    <tbody>
                      {compositionTable.map((item, index) => (
                        <tr key={index} className="border-b border-gray-200 last:border-b-0">
                          <td className="py-1.5 sm:py-2 text-sm sm:text-base text-gray-700 font-medium pr-4">{item.component}</td>
                          <td className="py-1.5 sm:py-2 text-sm sm:text-base text-right text-gray-900 font-semibold whitespace-nowrap">{item.amount}</td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              )}
              
              {nutritionFacts && nutritionFacts.trim() && (
                <div className="bg-green-50 rounded-lg p-3">
                  <div className="flex items-center gap-2 mb-2">
                    <Info className="h-3 w-3 sm:h-4 sm:w-4 text-green-600 flex-shrink-0" />
                    <span className="text-xs sm:text-sm font-medium text-green-700">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:</span>
                  </div>
                  <p className="text-xs sm:text-sm text-gray-600 leading-relaxed">{nutritionFacts}</p>
                </div>
              )}
            </div>
          )}
        </div>

        {/* –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ */}
        {keyBenefits && keyBenefits.trim() && (
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-8">
            <div>
              <div className="flex items-center gap-2 mb-3 sm:mb-4">
                <Heart className="h-4 w-4 sm:h-5 sm:w-5 text-green-600 flex-shrink-0" />
                <h3 className="text-base sm:text-lg font-semibold text-gray-900">–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h3>
              </div>
              <div className="space-y-2">
                {keyBenefits.split('\n').filter(benefit => benefit.trim()).map((benefit, index) => (
                  <div key={index} className="flex items-start gap-2">
                    <span className="text-green-600 font-bold mt-0.5 text-sm sm:text-base flex-shrink-0">{index + 1}.</span>
                    <span className="text-sm sm:text-base text-gray-700 leading-relaxed">{benefit.trim()}</span>
                  </div>
                ))}
              </div>
            </div>
            <div className="hidden lg:block"></div>
          </div>
        )}

        {/* –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
        {howToTake && (
          <div className="bg-gray-50 border border-gray-200 rounded-lg p-4 sm:p-6">
            <h3 className="text-base sm:text-lg font-semibold text-gray-900 mb-4 sm:mb-6 text-center">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞</h3>
            
            <div className="grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4">
              {/* –£—Ç—Ä–æ–º */}
              <div className={`border-2 rounded-lg p-3 sm:p-4 text-center transition-all ${
                howToTake === 'morning' ? 'border-yellow-300 bg-yellow-50' : 'border-gray-200 bg-white opacity-60'
              }`}>
                <div className="text-xl sm:text-2xl mb-2">‚òÄÔ∏è</div>
                <div className="font-medium text-gray-900 text-sm sm:text-base">–£—Ç—Ä–æ–º</div>
                <div className="text-xs sm:text-sm text-gray-600 mt-1 leading-tight">–° –∑–∞–≤—Ç—Ä–∞–∫–æ–º –¥–ª—è –ª—É—á—à–µ–≥–æ —É—Å–≤–æ–µ–Ω–∏—è</div>
                {howToTake === 'morning' && (
                  <div className="text-xs text-yellow-700 mt-2 font-medium">–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å –µ–¥–æ–π</div>
                )}
              </div>

              {/* –î–Ω–µ–º */}
              <div className={`border-2 rounded-lg p-3 sm:p-4 text-center transition-all ${
                howToTake === 'recommended' ? 'border-green-300 bg-green-50' : 'border-gray-200 bg-white opacity-60'
              }`}>
                <div className="text-xl sm:text-2xl mb-2">üïê</div>
                <div className="font-medium text-gray-900 text-sm sm:text-base">–î–Ω–µ–º</div>
                <div className="text-xs sm:text-sm text-gray-600 mt-1 leading-tight">–° –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–µ–º–æ–º –ø–∏—â–∏</div>
                {howToTake === 'recommended' && (
                  <div className="text-xs text-green-700 mt-2 font-medium">–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è</div>
                )}
              </div>

              {/* –í–µ—á–µ—Ä–æ–º */}
              <div className={`border-2 rounded-lg p-3 sm:p-4 text-center transition-all ${
                howToTake === 'evening' ? 'border-blue-300 bg-blue-50' : 'border-gray-200 bg-white opacity-60'
              }`}>
                <div className="text-xl sm:text-2xl mb-2">üåô</div>
                <div className="font-medium text-gray-900 text-sm sm:text-base">–í–µ—á–µ—Ä–æ–º</div>
                <div className="text-xs sm:text-sm text-gray-600 mt-1 leading-tight">–° —É–∂–∏–Ω–æ–º –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏</div>
                {howToTake === 'evening' && (
                  <div className="text-xs text-blue-700 mt-2 font-medium">–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–µ–º–∞</div>
                )}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default ProductInfoSections;